#!/usr/bin/env python

import os
import sys
from optparse import OptionParser

cwd = os.path.abspath("%s/.." % os.path.dirname(os.path.abspath(__file__)))
sys.path.append("%s/lib" % cwd)
from utils import CFunctions

if __name__ == "__main__":
    propagation_types = ["slave", "shared", "private", "unchange"]
    progname = os.path.basename(sys.argv[0]) or 'richard_parker'
    project_url = "http://github.com/xning/procszoo"
    description="""A simple cli to create new namespaces env,
    default it enable each namespaces"""
    epilog="%s is part of procszoo: %s"  % (progname, project_url)
    parser = OptionParser(
        usage="Usage: %prog [options] cmd_run_in_namespaces",
        description='A simple cli to create new namespaces env, default enable each namespaces',
        epilog=epilog)
    parser.add_option("-n", "--namespace", action="append", dest="namespaces",
                        help="namespace that should be create")
    parser.add_option("-N", "--negative-namespace", action="append",
                          dest="negative_namespaces",
                          help="namespace that should not be create")
    parser.add_option("-r", "--maproot", action="store_true", dest="maproot",
                          default=True,
                          help="map current effective user/group to root/root")
    parser.add_option("--no-maproot", action="store_false",
                        dest="maproot")
    parser.add_option(
        "-s", "--setgroups", action="store", type="string",
        dest="setgroups",
        help="""control the setgroups syscall in user namespaces,
        when setting to 'allow' will enable --no-maproot option""")
    parser.add_option("--mountproc", action="store_true", dest="mountproc",
                        help="remount procfs mountpoin", default=True)
    parser.add_option("--no-mountproc", action="store_false", dest="mountproc",
                        help="do not remount procfs")
    parser.add_option("--mountpoint", action="store", type="string",
                        dest="mountpoint",
                        help="dir that the new procfs would be mounted to")
    parser.add_option("-b", "--ns_bind_dir", action="store", type="string",
                        dest="ns_bind_dir",
                        help="dir that the new namespaces would be mounted to")
    parser.add_option(
        "--propagation", action="store", type="string",
        dest="propagation",
        help="modify mount propagation in mount namespace: %s" %
        "|".join(propagation_types))
    parser.add_option("-l", "--list", action="store_true", dest="list",
                          default=False,
                          help="list namespaces status")
    (options, args) = parser.parse_args()
    nscmd=None
    if args:
        nscmd=args[0]

    if options.setgroups == "allow" and options.maproot:
        options.maproot = False
    if options.mountproc and options.mountpoint is None:
        options.mountpoint = '/proc'

    c_funcs = CFunctions()
    if list:
        max_len = sorted([len(ns)
                              for ns in c_funcs.namespaces.namespaces])[-1]
        c_funcs.adjust_namespaces()
        for ns_name in c_funcs.namespaces.namespaces:
            ns_obj = getattr(c_funcs.namespaces, ns_name)
            print "%-6s: %-5s" % (ns_name, ns_obj.available)
        sys.exit(0)

    c_funcs.spawn_namespaces(
        namespaces=options.namespaces,
        negative_namespaces=options.negative_namespaces,
        maproot=options.maproot,
        mountproc=options.mountproc,
        mountpoint=options.mountpoint,
        ns_bind_dir=options.ns_bind_dir,
        propagation=options.propagation,
        nscmd=nscmd, setgroups=options.setgroups)
